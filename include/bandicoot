// Copyright 2017 Conrad Sanderson (http://conradsanderson.id.au)
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ------------------------------------------------------------------------


#ifndef BANDICOOT_INCLUDES
#define BANDICOOT_INCLUDES

#include <cassert>  // TODO: remove this after all of the code has been adapted

#include <armadillo>

#if (ARMA_VERSION_MAJOR < 7)
  #error "Armadillo version 7.100 or later is required"
 // TODO: use a more fine-grained minimum version (eg. 6.500)
#endif

#if !defined(ARMA_USE_U64S64)
  #pragma message("WARNING: present installation of Armadillo doesn't have 64 bit integers enabled")
#endif


#undef  CL_USE_DEPRECATED_OPENCL_1_2_APIS
#define CL_USE_DEPRECATED_OPENCL_1_2_APIS

#if defined(__APPLE__)
  #include <OpenCL/opencl.h>
#else
  #include <CL/opencl.h>
#endif


// TODO: make this conditional on clBLAS being present
#include <clBLAS.h>


#if defined(ARMA_USE_CXX11)
  #undef  COOT_USE_CXX11
  #define COOT_USE_CXX11
#endif


// TODO: the following includes are probably not necessary as a lot of Armadillo functionality is being reused

#include "bandicoot_bits/config.hpp"
#include "bandicoot_bits/compiler_setup.hpp"


#if defined(COOT_USE_CXX11)
  #include <mutex>
#endif

// TODO: include any stuff here that is not meant to be in the coot namespace


//! \namespace coot namespace for bandicoot classes and functions
namespace coot
  {
  
  // preliminaries
  
  #include "bandicoot_bits/coot_forward.hpp"
  #include "bandicoot_bits/coot_static_check.hpp"
  #include "bandicoot_bits/typedef_elem.hpp"
  #include "bandicoot_bits/typedef_mat.hpp"
  #include "bandicoot_bits/coot_str.hpp"
  #include "bandicoot_bits/coot_version.hpp"
  #include "bandicoot_bits/coot_config.hpp"
  #include "bandicoot_bits/coot_cl_error.hpp"
  #include "bandicoot_bits/traits.hpp"
  #include "bandicoot_bits/promote_type.hpp"
  #include "bandicoot_bits/upgrade_val.hpp"
  #include "bandicoot_bits/restrictors.hpp"
  #include "bandicoot_bits/access.hpp"
  #include "bandicoot_bits/span.hpp"
  #include "bandicoot_bits/constants.hpp"
  
  //
  // runtime
  
  #include "bandicoot_bits/kernel_id.hpp"
  #include "bandicoot_bits/kernel_src.hpp"
  #include "bandicoot_bits/coot_rt_bones.hpp"
  
  //
  // class prototypes
  
  #include "bandicoot_bits/cond_rel_bones.hpp"
  
  #include "bandicoot_bits/Base_bones.hpp"
  
  #include "bandicoot_bits/MatValProxy_bones.hpp"
  #include "bandicoot_bits/Mat_bones.hpp"
  #include "bandicoot_bits/SizeMat_bones.hpp"
  #include "bandicoot_bits/subview_bones.hpp"
  
  #include "bandicoot_bits/arrayops_bones.hpp"
  #include "bandicoot_bits/eOp_bones.hpp"
  #include "bandicoot_bits/eGlue_bones.hpp"
  #include "bandicoot_bits/eop_core_bones.hpp"
  #include "bandicoot_bits/eglue_core_bones.hpp"
  #include "bandicoot_bits/Op_bones.hpp"
  #include "bandicoot_bits/Glue_bones.hpp"
  
  #include "bandicoot_bits/op_sum_bones.hpp"
  #include "bandicoot_bits/op_htrans_bones.hpp"
  #include "bandicoot_bits/op_strans_bones.hpp"
  
  #include "bandicoot_bits/glue_times_bones.hpp"

  #include "bandicoot_bits/wall_clock_bones.hpp"
  
  //
  // low-level debugging and memory handling functions
  
  #include "bandicoot_bits/debug.hpp"
  #include "bandicoot_bits/cpu_memory.hpp"
  
  
  //
  // wrappers for various cmath functions
  
  #include "bandicoot_bits/coot_cmath.hpp"
  
  // definitions for LAPACK functions
  #include "bandicoot_bits/def_lapack.hpp"
  
  //
  // runtime
  
  #include "bandicoot_bits/coot_rt_meat.hpp"
  
  
  //
  // classes that underlay metaprogramming 
  
  #include "bandicoot_bits/unwrap.hpp"
  
  
  
  //
  // operators
  
  #include "bandicoot_bits/operator_times.hpp"
  #include "bandicoot_bits/operator_plus.hpp"
  #include "bandicoot_bits/operator_minus.hpp"
  #include "bandicoot_bits/operator_schur.hpp"
  #include "bandicoot_bits/operator_div.hpp"
  //#include "bandicoot_bits/operator_ostream.hpp"
  
  //
  // magma related
  // NOTE: magma uses rather dubious coding techniques
  
  //#include "bandicoot_bits/magma13_support.hpp"
  //#include "bandicoot_bits/magma13_dpotrf.hpp"
  
  #include "bandicoot_bits/magma22_support.hpp"
  
  #include "bandicoot_bits/magma22_dlarfb.hpp"
  #include "bandicoot_bits/magma22_dgeqrf.hpp"
  
  
  #include "bandicoot_bits/magma22_spotrf.hpp"
  #include "bandicoot_bits/magma22_dpotrf.hpp"
  
  //
  // user accessible functions
  
  // the order of the fn_*.hpp include files matters,
  // as some files require functionality given in preceding files
  
  #include "bandicoot_bits/fn_as_scalar.hpp"
  #include "bandicoot_bits/fn_elem.hpp"
  #include "bandicoot_bits/fn_trace.hpp"
  #include "bandicoot_bits/fn_accu.hpp"
  #include "bandicoot_bits/fn_sum.hpp"
  #include "bandicoot_bits/fn_trans.hpp"
  #include "bandicoot_bits/fn_strans.hpp"
  #include "bandicoot_bits/fn_chol.hpp"
  
  
  //
  // class meat
  
  #include "bandicoot_bits/mul_gemv.hpp"
  #include "bandicoot_bits/mul_gemm.hpp"
  
  #include "bandicoot_bits/cond_rel_meat.hpp"
  
  #include "bandicoot_bits/Base_meat.hpp"
  
  #include "bandicoot_bits/MatValProxy_meat.hpp"
  #include "bandicoot_bits/Mat_meat.hpp"
  #include "bandicoot_bits/SizeMat_meat.hpp"
  #include "bandicoot_bits/subview_meat.hpp"
  
  #include "bandicoot_bits/arrayops_meat.hpp"
  #include "bandicoot_bits/eOp_meat.hpp"
  #include "bandicoot_bits/eGlue_meat.hpp"
  #include "bandicoot_bits/eop_core_meat.hpp"
  #include "bandicoot_bits/eglue_core_meat.hpp"
  #include "bandicoot_bits/Op_meat.hpp"
  #include "bandicoot_bits/Glue_meat.hpp"
  
  #include "bandicoot_bits/op_sum_meat.hpp"
  #include "bandicoot_bits/op_htrans_meat.hpp"
  #include "bandicoot_bits/op_strans_meat.hpp"
  
  #include "bandicoot_bits/glue_times_meat.hpp"
  
  #include "bandicoot_bits/wall_clock_meat.hpp"

  #include "bandicoot_bits/generate_kernel.hpp"
  }



#include "bandicoot_bits/compiler_setup_post.hpp"

#endif
